---
######################################
#         USER VARIABLES             #
# The are automatically updated or   #
# you can update them manually       #
######################################
rhel_version: "9.0"
domain: "lab.qubinode.io"
admin_user: admin

# PTR - The PTR record that should be use
qubinode_ptr:  1.168.192.in-addr.arpa

# Public DNS server
dns_forwarder: 1.1.1.1

# ROLE: swygue-redhat-subscription
# whether to use username/pass or RHSM
rhsm_reg_method: Username

kvm_host_gw: 192.168.1.1
kvm_host_interface: eno1
kvm_host_ip: 192.168.1.51
kvm_host_macaddr: '9d:2d:9e:f6:18:1e'
kvm_host_mask_prefix: 24
kvm_host_netmask: 255.255.255.0
kvm_host_mtu: 1500
kvm_bridge_type: Bridge
kvm_host_bootproto: none
kvm_host_domain: "{{ domain }}"

libvirt_pool_name_check: yes
skip_libvirt_pool: no

# The the primary dns server to the DNS server
primary_dns_server: "{{ idm_serve_ip | default('1.1.1.1') }}"

# We leverage a bridge network for OCP3 installs
# and other VMS. This sets the name of the bridge to be created and use when
# deploying VMS. If there is an existing libvirt bridge network, set the name here instead.
qubinode_bridge_name: qubibr0

# RHEL 7.8 is the current tested RHEL 7 minor release.
# RHEL 8.3  is the current tested RHEL 8 minor release.
rhel_release: 9.0

# This variable is being phased out
run_qubinode_setup: yes

# Run storage check
run_storage_check: skip

# Enable cockpit service
enable_cockpit: yes

# # Set to yes to add the admin_user to the libvirt group
# # and change libvirt to be accessible user
enable_libvirt_admin_user: yes

# Configure the user bash shell login prompt
# # This will overwrite your existing .bashrc, .vimrc and other terminal configuration files
configure_shell: yes

# set path to libvirt images
kvm_host_libvirt_dir: /var/lib/libvirt/images

## deploy-kvm-vm role uses this var
kvm_vm_pool_dir: "{{ kvm_host_libvirt_dir }}"

host_device: "{{ kvm_host_libvirt_extra_disk | default('nvme0n1') }}"
vg_name: vg_qubi
vm_libvirt_net_check: yes

# should a bridge interface be created
configure_bridge: true

# Set to no prevent the installer from attempting
# setup a LVM group for qubinode. Also set this to no
# if you already have you storage for lvm setup
create_lvm: yes

# used in playbook setup_kvmhost.yml
network_interface_name: "{{ kvm_host_interface }}"

# set storage device to dedicate to /var/lib/libvirt/images
kvm_host_libvirt_extra_disk: nvme0n1

# setup NFS Server
setup_nfs: true
remove_nfs: false

# use by funciton check_hardware_resources
libvirt_pool_name: default

qubinode_installer_host_completed: no
qubinode_installer_rhsm_completed: no
user_input_complete: no
qubinode_installer_ansible_completed: no
qubinode_base_reqs_completed: no

# name of the libvirt network to use
vm_libvirt_net: "qubinet"

libvirt_network_name: "qubinat"

libvirt_host_networks:
  - name: "{{ vm_libvirt_net }}"
    create: true
    mode: bridge
    bridge_device: "{{ kvm_host_bridge_name | default(qubinode_bridge_name) }}"
    ifcfg_type: "{{ kvm_bridge_type }}"
    ifcfg_bootproto: "{{ kvm_host_bootproto }}"
    bridge_slave_dev: "{{ kvm_host_interface }}"
    gateway: "{{ kvm_host_gw }}"
    mask_prefix: "{{ kvm_host_mask_prefix }}"
    ipaddress: "{{ kvm_host_ip }}"
    mask: "{{ kvm_host_netmask }}"
    subnet: "not currently in use"
    mac: "{{ kvm_host_macaddr }}"
    mtu: 1500

kvm_host_dns_servers:
  - "{{ primary_dns_server | default('1.1.1.1') }}"
  - "{{ secondary_dns_server | default('8.8.8.8') }}"

search_domains:
  - "{{ primary_dns_server }}"

# ROLE: swygue-redhat-subscription
rhsm_org: "{{ rhsm_org }}"
rhsm_activationkey: "{{ rhsm_activationkey }}"
rhsm_org_id: "{{ rhsm_org }}"
rhsm_setup_insights_client: false
rhsm_user: "{{ rhsm_username }}"
rhsm_pass: "{{ rhsm_password }}"
org_id: "{{ rhsm_org }}"
ssh_username: "{{ admin_user }}"

 # LVM
logical_volumes:
  - name: qubi_images
    size: "+100%FREE"
    mount_dir: "{{ kvm_host_libvirt_dir | default('/var/lib/libvirt/images') }}"
    fstype: xfs

#This is for KVM host initial setup of /etc/resolv.conf
kvm_host_dns_server: "{{ primary_dns_server | default('1.1.1.1') }}"
kvm_bridge_type: Bridge
kvm_host_bootproto: none
kvm_host_domain: "{{ domain }}"

libvirt_pkgs_8:
   - virt-install
   - libvirt-daemon-config-network
   - libvirt-daemon-kvm
   - libguestfs-tools
   - libvirt-client
   - qemu-kvm
   - nfs-utils
   - libvirt-daemon
   - libvirt-client
   - virt-top
   - tuned
   - openssh-server
   - wget
   - git
   - net-tools
   - bind-utils
   - yum-utils
   - iptables-services
   - bash-completion
   - kexec-tools
   - sos
   - psacct
   - vim
   - device-mapper-event-libs
   - device-mapper-libs
   - httpd-tools
   - tmux
   - python3-dns
   - python3-lxml
   - cockpit-machines
   - osbuild-composer
   - cockpit-composer
   - lorax
   - skopeo
   
